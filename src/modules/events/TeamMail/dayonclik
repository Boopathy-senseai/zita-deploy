const updatesunday = [
  { starttime: "9.30", endtime: "11.00" },
  { starttime: "11.30", endtime: "12.00" },
  { starttime: "1.30", endtime: "6.00" }
];

const generateIntervals = (start, end, intervalMinutes) => {
  console.log("sd", updatesunday[0].starttime);
  const intervals = [];
  const [startHour, startMinute] = start.split(".");
  const [endHour, endMinute] = end.split(".");

  let currentHour = parseInt(startHour, 10);
  let currentMinute = parseInt(startMinute, 10);

  // Adjust the start time to the next half hour
  if (currentMinute < 30) {
    currentMinute = 30;
  } else {
    currentHour++;
    currentMinute = 0;
  }

  while (
    currentHour < parseInt(endHour, 10) ||
    (currentHour === parseInt(endHour, 10) &&
      currentMinute <= parseInt(endMinute, 10))
  ) {
    const formattedStartHour = currentHour.toString().padStart(2, "0");
    const formattedStartMinute = currentMinute.toString().padStart(2, "0");

    currentMinute += intervalMinutes;
    console.log("currentMinutecurrentMinute", currentMinute);
    if (currentMinute >= 60) {
      currentHour++;
      currentMinute -= 60;
    }
    const formattedEndHour = currentHour.toString().padStart(2, "0");
    const formattedEndMinute = currentMinute.toString().padStart(2, "0");

    const interval = `${formattedStartHour}.${formattedStartMinute} - ${formattedEndHour}.${formattedEndMinute}`;

    intervals.push(interval);
  }
  return intervals;
};

const intervalMinutes = 30;
const finalIntervals = [];

for (const time of updatesunday) {
  const { starttime, endtime } = time;
  const intervals = generateIntervals(starttime, endtime, intervalMinutes);
  finalIntervals.push(...intervals);
}

console.log(finalIntervals);
